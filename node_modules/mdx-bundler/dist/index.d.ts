/**
 *
 * @param {string} mdxSource - A string of mdx source code
 * @param {import('./types').BundleMDXOptions} options
 * @returns
 */
export function bundleMDX(mdxSource: string, { files, xdmOptions, esbuildOptions, globals, cwd, grayMatterOptions, }?: import('./types').BundleMDXOptions): Promise<{
    code: string;
    frontmatter: {
        [key: string]: any;
    };
    errors: esbuild.Message[];
    matter: grayMatter.GrayMatterFile<any>;
}>;
/**
 *
 * @param {string} mdxPath - The file path to bundle.
 * @param {import('./types').BundleMDXOptions} options
 * @returns
 */
export function bundleMDXFile(mdxPath: string, { files, xdmOptions, esbuildOptions, globals, cwd, grayMatterOptions, }?: import('./types').BundleMDXOptions): Promise<{
    code: string;
    frontmatter: {
        [key: string]: any;
    };
    errors: esbuild.Message[];
    matter: grayMatter.GrayMatterFile<any>;
}>;
import * as esbuild from "esbuild";
import grayMatter from "gray-matter";
