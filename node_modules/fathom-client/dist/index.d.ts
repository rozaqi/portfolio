interface Fathom {
    trackPageview: (opts?: PageViewOptions) => void;
    trackGoal: (code: string, cents: number) => void;
}
export declare type PageViewOptions = {
    url?: string;
    referrer?: string;
};
export declare type LoadOptions = {
    url?: string;
    auto?: boolean;
    honorDNT?: boolean;
    canonical?: boolean;
    includedDomains?: string[];
    excludedDomains?: string[];
    spa?: 'auto' | 'history' | 'hash';
};
declare type FathomCommand = {
    type: 'trackPageview';
    opts: PageViewOptions | undefined;
} | {
    type: 'trackGoal';
    code: string;
    cents: number;
};
declare global {
    interface Window {
        fathom?: Fathom;
        __fathomClientQueue: FathomCommand[];
    }
}
export declare const load: (siteId: string, opts?: LoadOptions) => void;
/**
 * Tracks a pageview.
 *
 * @param opts - An optional `url` or `referrer` to override auto-detected values.
 */
export declare const trackPageview: (opts?: PageViewOptions) => void;
/**
 * Tracks a goal.
 *
 * @param code - The goal ID.
 * @param cents - The value in cents.
 */
export declare const trackGoal: (code: string, cents: number) => void;
export {};
